' Gambas class file

Private $resfam As Result
Private $restva As Result
Private $facav As String

Private Const entete As String = " numfac AS numbl, 'F' AS type, cdclifac AS cdclibl, cvclifac AS cvclibl, nmclifac AS nmclibl, pnmclifac AS pnmclibl, adr1fac AS adr1bl, adr2fac AS adr2bl, cpfac AS cpbl, villefac AS villebl, datefac AS datebl, rmofac AS rmobl, rartfac AS rartbl, exofac AS exobl, remmofac AS remmobl, remartfac  AS remartbl, marge_art, marge_mo,  totfac AS totalht, 1 AS imp, acpt, mreg, reg, ech, numfac, datefac AS dtefac, numserie, codep, mtreg, totfacttc AS totalttc, cdep, False AS livraison, acquitte, gestfac AS gestbl"
Private Const detail As String = " num_ligfac AS num_ligbl, numlig_ligfac AS numlig_ligbl, code_ligfac AS code_ligbl, libel_ligfac AS libel_ligbl, fam_ligfac AS fam_ligbl, pu_ligfac AS pu_ligbl, qte_ligfac AS qte_ligbl, brut_ligfac AS brut_ligbl, rem_ligfac AS rem_ligbl, netht_ligfac AS netht_ligbl, typel_ligfac AS typel_ligbl, tm_ligfac AS tm_ligbl, com_ligfac AS com_ligbl, bloc, mtx_ligfac, mrgart_ligfac AS mrgart_ligbl, mrgmo_ligfac AS mrgmo_ligbl, tx_ligfac AS tx_ligbl"

Public Struct Ledit
  Index As Integer
  code As String
  libel As String
  stk As String
  unit As String
  qte As String
  puht As String
  brht As String
  rem As String
  neht As String
  tx As String
  type As String
End Struct

Public Struct ltva
  num As String
  tottva As Float
  totht As Float
  taux As String
End Struct

Public Struct compta 
  numcpt As String
  intitule As String
  libelle As String
  dte As Date
  dateech As Date
  numdoc As String
  numlot As String
  montantd As Float
  montantc As Float
  dteval As Date
End Struct

Public vfac As VarFac
Public ligneart As Ledit
Public lignecom As Compta
Public lignetva As New Ltva
Public ecrit As New Collection
Public ligne As New Collection
Public tva As New Collection
Public gestion As Float
Public montart As Float
Public montmo As Float
Public remart As Float
Public remmo As Float
Public montht As Float
Public monttva As Float
Public montttc As Float
Public nomfm As String


Public Sub _new(vafac As VarFac, Optional nom As String)
'nom contient la nom du client si la case divers est coché dans facturefm
  Dim bl, respar As Result
  Dim condent, condlig As String
  Dim num, i As Integer
  Dim tot As Float
  Dim numlig As String = "0000"
  Dim lignetva1 As Ltva
  Dim numbl As String
  Dim lg As New Compta
  Dim commentaire As String[]
  
  vfac = vafac
  vfac.imp.FullPage = True
  Select Case vfac.choix
    Case "A"
      vfac.resent = utils.db.Exec("SELECT " & entete & " FROM Fiches_HistoFac" & vfac.tab & " WHERE numfac=&1", vfac.numfac)
      vfac.reslig = utils.db.Exec("SELECT " & detail & " FROM Fiches_HistoLigfac" & vfac.tab & " WHERE num_ligfac=&1", vfac.numfac)
    Case "FM"
      If vfac.rescli!cli_div Then
        bl = Utils.db.Exec("SELECT * FROM Bl WHERE code=&1 AND nom=&2", vfac.numcli, nom)       'on gére les clients divers
        nomfm = nom
      Else
        bl = Utils.db.Exec("SELECT * FROM Bl WHERE code=&1", vfac.numcli)
      Endif
      bl.MoveFirst
      Repeat
        condlig = condlig & Utils.db.Subst("num_ligbl=&1 OR ", bl!num)
        condent = condent & Utils.db.Subst("numbl=&1 OR ", bl!num)
      Until bl.MoveNext()
      condlig = Left(condlig, -4)
      condent = Left(condent, -4)
     vfac.resent = Utils.db.Exec("SELECT * FROM Fiches_Bl" & vfac.tab & " WHERE " & condent & " ORDER BY numbl")
     vfac.reslig = Utils.db.Exec("SELECT * FROM Fiches_Ligbl" & vfac.tab & " WHERE " & condlig & "ORDER BY  num_ligbl,numlig_ligbl")
    
    Case Else
      If vfac.numfac Then
        vfac.resent = Utils.db.Exec("SELECT * FROM Fiches_Bl" & vfac.tab & "  WHERE numfac=&1", vfac.numfac)
        vfac.numbl = vfac.resent!numfac
        vfac.reslig = Utils.db.Exec("SELECT * FROM Fiches_Ligbl" & vfac.tab & "  WHERE num_ligbl=&1", vfac.numbl)
      Else
        vfac.resent = Utils.db.Exec("SELECT * FROM Fiches_Bl" & vfac.tab & "  WHERE numbl=&1", vfac.numbl)
        vfac.reslig = Utils.db.Exec("SELECT * FROM Fiches_Ligbl" & vfac.tab & "  WHERE num_ligbl=&1", vfac.numbl)
        vfac.numfac = vfac.resent!numfac
    Endif
    
  End Select
  
  If vfac.reslig.Available Then
    vfac.reslig.MoveFirst
    vfac.resent.MoveFirst
    Repeat
      numlig = Format(Val(numlig) + 1, "0000")
      Select Case vfac.choix
        Case "FM", "F"     'on renumerote les lignes si facture
          If vfac.nblfac Then
            If numbl <> vfac.reslig!num_ligbl Then
              ligneart = New Ledit
              ligneart.Index = -1
              If numbl Then vfac.resent.MoveNext()
              ligneart.libel = "Bon n° " & vfac.reslig!num_ligbl & " du " & LDate(vfac.resent!datebl).L
              ligneart.type = "C"
              ligne.Add(ligneart, numlig)
              numbl = vfac.reslig!num_ligbl 
              numlig = Format(Val(numlig) + 1, "0000")
            Endif
          Endif
      End Select
      
      Select Case vfac.reslig!typel_ligbl
        Case "A"
          calc(numlig)
          montart += Val(ligneart.neht)
          montht += Val(ligneart.neht)
          remart = remart + (Val(ligneart.brht) - Val(ligneart.neht))
          
        Case "M"
          calc(numlig)
          montmo += Val(ligneart.neht)
          montht += Val(ligneart.neht)
          remmo = remmo + (Val(ligneart.brht) - Val(ligneart.neht))
          
        Case "P", "C", "R"
          commentaire = Split(vfac.reslig!com_ligbl, "\n")
          For i = 0 To commentaire.Max
            ligneart = New Ledit
            ligneart.Index = -1
            ligneart.libel = commentaire[i]
            ligneart.type = vfac.reslig!typel_ligbl
            ligne.Add(ligneart, Format(Val(numlig) + i, "0000"))
          Next
          numlig = Format(Val(numlig) + commentaire.Max, "0000")
        
        Case "T"
          If Not vfac.ligne2 Then
            ligneart = New Ledit
            ligneart.Index = vfac.reslig.Index
            ligneart.libel = vfac.reslig!libel_ligbl
            ligneart.type = vfac.reslig!typel_ligbl
            ligne.Add(ligneart, numlig)
          Else
            numlig = Format(Val(numlig) - 1, "0000")
          Endif
          
          Case "E"
            ligneart = New Ledit
            ligneart.Index = vfac.reslig.Index
            ligneart.libel = "Dont " & vfac.reslig!pu_ligbl & " " & vfac.reslig!libel_ligbl
            ligneart.type = vfac.reslig!typel_ligbl
            ligne.Add(ligneart, numlig)

      End Select
    Until vfac.reslig.MoveNext()
  Endif
  
  If vfac.resent.Available Then
    vfac.resent.MoveFirst            'on prend l'adresse de facturation du 1° bl
    vfac.adrfac.nom = vfac.resent!cvclibl & " " & vfac.resent!nmclibl & " " & vfac.resent!pnmclibl
    vfac.adrfac.adr1 = vfac.resent!adr1bl
    vfac.adrfac.adr2 = vfac.resent!adr2bl
    vfac.adrfac.cp = vfac.resent!cpbl
    vfac.adrfac.ville = vfac.resent!villebl
    Repeat 
      If CFloat(vfac.resent!gestbl) <> 0 Then
        gestion = vfac.resent!gestbl
        respar = utils.db.Exec("SELECT cptfrais,tvafrais,taux_tva,cc_tva,intitule_cc,devise FROM Fiches_Parametres,Fiches_Tvaav,Fiches_Comptes WHERE tvafrais=code_tva AND cptfrais=compte_cc")
        If respar.Available Then
          vfac.devise = respar!devise
          If Not vfac.resent!exobl Or vfac.autoent Then            'calcul de tva si pas exonéré
            If tva.Exist(respar!tvafrais) Then
              lignetva = tva[respar!tvafrais]
              lignetva.totht += vfac.resent!gestbl
              tva[respar!tvafrais] = lignetva
            Else
              lignetva = New Ltva
              lignetva.num = respar!tvafrais
              lignetva.taux = respar!taux_tva
              lignetva.totht = vfac.resent!gestbl
              tva.Add(lignetva, respar!tvafrais)
            Endif
          Endif
        Endif
        montht += vfac.resent!gestbl
        ecriture(respar!cptfrais, vfac.resent!gestbl, respar!intitule_cc)          'ecriture comptable
        Break
      Endif
    Until vfac.resent.MoveNext()
    vfac.resent.MoveFirst
    'ecriture comptable sur la tva
    If Object.IsValid(tva) Then
      For Each lignetva1 In tva
        lignetva1.tottva = lignetva1.totht * (lignetva1.taux / 100)
        tva[lignetva1.num] = lignetva1
        monttva += utils.arrondi(lignetva1.tottva, 2) 
        respar = utils.db.Exec("SELECT compte_cc,intitule_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", lignetva1.num)
        If respar.Available Then ecriture(respar!compte_cc, lignetva1.tottva, respar!intitule_cc)
      Next 
    Endif
    If vfac.ttc Then
      montht = montht - monttva
    Endif
    montttc = utils.arrondi(montht, 2) + utils.arrondi(monttva, 2)
    'ecriture client
    ecriture(vfac.numcli, montttc * -1, Left(vfac.adrfac.nom, 35))
    If vfac.doclet And vfac.blchif Then        'si total du doc en lettre
      ligneart = New Ledit
      ligneart.Index = -1
      ligneart.type = "TD"        'pour total document => ne pas enregistrer dans les fichiers
      ligneart.libel = "Total document : " & Numtostring.Convertir(montttc, vfac.devise)
      numlig = Format(Val(numlig) + 1, "0000")
      ligne.Add(ligneart, numlig)
    Endif
  Endif
  If Not vfac.saisreg And vfac.choix Then
    If vfac.reg.Count = 0 Then
      vfac.lreg.mode = vfac.rescli!cli_reg
      vfac.reg.Add(vfac.lreg)
    Endif
  Endif
  If montht < 0 Then
    For Each lg In ecrit
      lg.libelle = "AVOIR " & vfac.rescli!cli_nom
      ecrit[ecrit.Key] = lg
    Next
  Endif

End

Private Sub calc(numlig As String)
  
  Dim resart, resfam As Result
  Dim txtva As Float
  Dim tot As Float
  
  'on crée la ligne à editer
  If vfac.reslig!typel_ligbl = "A" Then
    resart = Utils.db.Exec("SELECT * FROM Fiches_Art WHERE art_code=&1", vfac.reslig!code_ligbl)
  Else
    resart = Utils.db.Exec("SELECT mo_code AS art_code, 0 AS art_qte, '0' AS art_dec, '2' AS art_nbd,mo_txht AS art_pvht FROM Fiches_Mo WHERE mo_code=&1", vfac.reslig!code_ligbl)
  Endif
  ligneart = New Ledit
  txtva = (vfac.reslig!mtx_ligfac / 100) + 1
  ligneart.Index = vfac.reslig.Index                   'renseignements communs
  ligneart.code = vfac.reslig!code_ligbl
'  If vfac.casier Then
'    ligneart.libel = resart!art_casier & " " & vfac.reslig!libel_ligbl
'  Else
    ligneart.libel = vfac.reslig!libel_ligbl
 ' Endif
  ligneart.qte = vfac.reslig!qte_ligbl
  If Val(utils.cpoint(vfac.reslig!rem_ligbl)) = 0 Then ligneart.rem = " " Else ligneart.rem = vfac.reslig!rem_ligbl
  ligneart.tx = vfac.reslig!tx_ligbl
  ligneart.type = vfac.reslig!typel_ligbl
  ligneart.stk = mult(resart!art_qte, 1, resart!art_dec)
  If vfac.remise And vfac.choix = "B" Then                      'si ignore_remise on recalcul avec la fiche article
    ligneart.puht = resart!art_pvht
    ligneart.brht = mult(ligneart.puht, ligneart.qte, "2")
    If Trim(ligneart.rem) Then
      tot = Val(Utils.cpoint(ligneart.brht)) - ((Val(Utils.cpoint(ligneart.rem)) / 100) * Val(Utils.cpoint(ligneart.brht)))
      ligneart.neht = Utils.CDec(Str(tot), "2")
     Else
      ligneart.neht = ligneart.brht
    Endif
  Else
    ligneart.puht = vfac.reslig!pu_ligbl
    ligneart.brht = vfac.reslig!brut_ligbl
    ligneart.neht = mult(vfac.reslig!netht_ligbl, 1, "2")
  Endif
  If vfac.ttc Then                     'si edition ttc 
    ligneart.puht = mult(ligneart.puht, txtva, resart!art_nbd)
    ligneart.brht = mult(ligneart.brht, txtva, "2")
    ligneart.neht = mult(ligneart.neht, txtva, "2")
  Endif
  If vfac.pxsdec Then              'si facture sans décimal
    ligneart.puht = mult(ligneart.puht, 1, " resart!art_nbd")
    ligneart.brht = mult(ligneart.brht, 1, "0")
    ligneart.neht = mult(ligneart.neht, 1, "0")
  Endif
  ligne.Add(ligneart, numlig)
  'on rajoute la tva
'  vfac.resent.MoveFirst
  If Not vfac.resent!exobl Or vfac.autoent Then            'pas de calcul de tva si exonéré
      If tva.Exist(vfac.reslig!tx_ligbl) Then
        lignetva = tva[vfac.reslig!tx_ligbl]
        If vfac.ttc Then
          lignetva.totht += Val(ligneart.neht) / txtva
        Else
          lignetva.totht += Val(ligneart.neht)
        Endif
        tva[vfac.reslig!tx_ligbl] = lignetva
      Else
        lignetva = New Ltva
        lignetva.num = vfac.reslig!tx_ligbl
        lignetva.taux = vfac.reslig!mtx_ligfac
        If vfac.ttc Then
          lignetva.totht = Val(ligneart.neht) / txtva
        Else
          lignetva.totht = Val(Utils.cpoint(ligneart.neht))
        Endif
        tva.Add(lignetva, vfac.reslig!tx_ligbl)
      Endif
  Endif
  'on prepare l'écriture comptable
  resfam = Utils.db.Exec("SELECT compt_fam,intitule_cc FROM Fiches_Fam,Fiches_Comptes WHERE compt_fam=compte_cc AND code_fam=&1", vfac.reslig!fam_ligbl)
  If resfam.Available Then ecriture(resfam!compt_fam, Val(ligneart.neht), resfam!intitule_cc)

  
End


Public Sub ecriture(numcpt As String, tot As Float, intitule As String)
  
  If ecrit.Exist(numcpt) Then
    lignecom = ecrit[numcpt]
    If tot < 0 Then
        tot = tot * -1
        lignecom.montantd += tot
    Else
        lignecom.montantc += tot
    Endif
  Else
      lignecom = New Compta
      lignecom.numcpt = numcpt
      lignecom.intitule = intitule
      lignecom.libelle = "FACTURE " & vfac.resent!nmclibl
      lignecom.dte = vfac.dtedoc.G
      lignecom.dateech = vfac.dteech.G
      lignecom.numdoc = vfac.numfac
      lignecom.numlot = vfac.numfac
      If tot < 0 Then
        lignecom.montantd = tot * -1
      Else
        lignecom.montantc = tot
      Endif
      ecrit.Add(lignecom, numcpt)
  Endif
  
End


Private Function mult(fac1 As Variant, fac2 As Variant, ndec As String) As String
  
  Dim f1, f2 As Float
  Dim n As Integer
  Dim nbr As String
  
  If IsNull(ndec) Then ndec = "O"
  If Not IsNull(fac1) Then
    If TypeOf(fac1) = gb.String Then
      f1 = Val(Utils.cpoint(fac1))
    Else
      f1 = fac1
    Endif
  Else 
    f1 = 0
  Endif
  If Not IsNull(fac2) Then
    If TypeOf(fac2) = gb.String Then
      f2 = Val(Utils.cpoint(fac2))
    Else
      f2 = fac2
    Endif
  Else
    f2 = 0
  Endif
  
  nbr = Str(f1 * f2)
  nbr = Utils.CDec(ndec, nbr)
  Return nbr
  
End


