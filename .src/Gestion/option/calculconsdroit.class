' Gambas class file

'pour l'édition des factures boissson gére le detail et les totaux des droits et consignes, fait la mise en format pour l'édition.
'Gére l'écriture dans le fichier consigne (Fiches_ligcons) et régie (Fiches_ligregie).

Inherits CalFac

Private $cimp As New Collection
Private $vdecons As New Variant[]
Private $stotcons As String = "0"
Private $stotdecons As String = "0"
Private $stotdr As String = "0"
Private $stotss As String = "0"
Private $stotasc As String = "0"
Private $ftotht As Float
Private $inb As Integer
Private $num As String
Private $ftotv As Float
Private $ftotap As Float
Private $cdrt As New Calculdroit[]
Private $schoix As String
Private $slstnum As New String[]
Private $clot As Date
Private $borientation As Boolean

Property Read aimprimer As Collection
Property Read consigne As String
Property Read deconsigne As String
Property Read droit As String
Property Read secu As String
Property Read ascise As String
Property Read totht As Float
Property Read nbdecons As Integer
Property Read decons As Variant
Property Read totvolume As String
Property Read totap As String
Property Read clotmat As Date


Public Sub _new(num As String, choix As String)

  Dim rescons, reslig1, res As Result
  Dim drt As Calculdroit
  Dim i, j As Integer
  Dim vri As String[]
  Dim montht, montcons As Float
  Dim numfac, qst As String
  Dim lg As Variant
  
  $borientation = borientation()
  If Not $borientation Or Not Me.vfac.blchif Then Return
  
  $num = num                                              ' si $schoix=B num de bon =F num facture = FM num client =M num facture
  $schoix = choix                                       ' "B" ==> saisie factures "F" réedition des factures "FM" factures fin de mois "M" facture magasin
  If choix = "FM" Then                                   ' facture fin de mois =>regarde dans tous les bons
    $schoix = "B"
  Endif
  If choix = "A" Then $schoix = "F"
  Me.vfac.imp.FullPage = False
  If $schoix = "M" Then Return            'Voir pour les consignes magasin+ tard
  Me.vfac.resent.MoveFirst
  For Each lg In Me.ligne
    vri = [" ", " ", " ", " ", " ", " ", " ", " "]
    If lg.Index > -1 And lg.code And lg.type = "A" Then
      Me.vfac.reslig.MoveTo(lg.Index)
      'Gestion des consignes
      reslig1 = Utils.db.Exec("SELECT numlig,nb,montant,Fiches_consigne.type FROM Fiches_ligcons,Fiches_consigne WHERE num=&1 AND Fiches_ligcons.type=&3 AND Fiches_ligcons.codecons=Fiches_consigne.code AND numlig LIKE &2", Me.vfac.reslig!num_ligbl, "%" & Me.vfac.reslig!numlig_ligbl, $schoix)
      If reslig1.Available Then
        reslig1.MoveFirst
        montcons = 0
        For j = 0 To reslig1.Max
          Select Case reslig1!type
            Case "P"
              vri[0] = Str(reslig1!nb)
            Case "C"
              vri[1] = Str(reslig1!nb)
            Case "B"
              vri[2] = Str(reslig1!nb)
          End Select
          $ftotht += reslig1!montant
          $stotcons = Format(utils.arrondi(Val($stotcons) + reslig1!montant, 2), ",0.00")
          montcons += reslig1!montant
          reslig1.MoveNext
       Next
        vri[3] = Format(utils.arrondi(montcons, 2), ",0.00")
        $cimp.Add(vri, Me.ligne.Key)
      Endif
    Else
      $cimp.Add(vri, Me.ligne.Key)
    Endif
    vri = [" ", " ", " ", " ", " ", " ", " ", " "]
  Next
  'Gestion des droits
  Select Case $schoix
    Case "B"
      reslig1 = Utils.db.Exec("SELECT numlig,codeart,coderegie,nom,qte,volume,Fiches_ligregie.degres,Fiches_regie.type,volumeap,montdr,montss,txtvadr,txtvass,nom,art_design,art_volm,art_deg,art_fam FROM Fiches_ligregie,Fiches_regie,Fiches_Art,Fiches_Bl WHERE numbl=&1 AND num=numfac AND Fiches_regie.code=coderegie AND art_code=codeart", Me.vfac.numbl)
    Case "F"
      reslig1 = Utils.db.Exec("SELECT numlig,codeart,coderegie,nom,qte,volume,Fiches_ligregie.degres,Fiches_regie.type,volumeap,montdr,montss,txtvadr,txtvass,nom,art_design,art_volm,art_deg,art_fam FROM Fiches_ligregie,Fiches_regie,Fiches_Art WHERE num=&1 AND Fiches_regie.code=coderegie AND art_code=codeart", Me.vfac.numfac)
  End Select
  If reslig1.Available Then            'affiche si facture déja éditée 
    reslig1.MoveFirst
    For i = 0 To reslig1.Max 
      If $cimp.Exist(Right(reslig1!numlig, 4)) Then
        vri = $cimp[Right(reslig1!numlig, 4)]
      Else
        vri = [" ", " ", " ", " ", " ", " ", " ", " "]
        $cimp.Add(vri, Right(reslig1!numlig, 4))
      Endif
      drt = New Calculdroit(reslig1!coderegie, reslig1!art_volm, reslig1!art_deg, reslig1!qte, reslig1!art_fam)
      drt.droit = reslig1!montdr
      drt.secu = reslig1!montss
      drt.tauxtvadr = reslig1!txtvadr
      drt.tauxtvass = reslig1!txtvass
      '$cdrt.Add(drt)
      If reslig1!art_volm <> 0 Then vri[4] = reslig1!art_volm
      If reslig1!art_deg <> 0 Then vri[5] = reslig1!art_deg
      If reslig1!volume <> 0 Then vri[6] = reslig1!volume
      If reslig1!volumeap <> 0 Then vri[7] = reslig1!volumeap
      $cimp[Right(reslig1!numlig, 4)] = vri
      If drt.suspendu Or drt.drsurfac Then            'rajout des droits si magasin suspendu ou droit a part
        Select Case reslig1!type
          Case "A", "V"
            $stotdr = Str(Val($stotdr) + reslig1!montdr)
          Case "B"
            $stotasc = Str(Val($stotasc) + reslig1!montdr)
            If Not drt.suspendu Then cassise(drt)
        End Select
         If drt.suspendu Then        'prepa de l'ecriture comptable
          cdroits(drt)
        Endif
      Endif
      $stotss = Str(Val($stotss) + reslig1!montss)
      $ftotht += reslig1!montdr + reslig1!montss
      $ftotv += drt.vol
      $ftotap += drt.volap
      reslig1.MoveNext
    Next
  Else
    For Each lg In Me.ligne         'affiche si facture non éditée
      If lg.Index = -1 Or Not lg.code And lg.type <> "A" Then Continue
      Me.vfac.reslig.MoveTo(lg.Index)
      reslig1 = Utils.db.Exec("SELECT art_dra,art_volm,art_deg,art_fam FROM Fiches_Art WHERE art_code=&1 AND art_dra IS NOT NULL", Me.vfac.reslig!code_ligbl)
      If reslig1.Available Then 
        vri = [" ", " ", " ", " ", " ", " ", " ", " "]
        If $cimp.Exist(Me.ligne.Key) Then
          vri = $cimp[Me.ligne.Key]
        Else
          $cimp.Add(vri, Me.ligne.Key)
        Endif
        drt = New Calculdroit(reslig1!art_dra, reslig1!art_volm, reslig1!art_deg, Me.vfac.reslig!qte_ligbl, reslig1!art_fam)
        If reslig1!art_volm <> 0 Then vri[4] = reslig1!art_volm
        If reslig1!art_deg <> 0 Then vri[5] = reslig1!art_deg
        If drt.vol <> 0 Then vri[6] = drt.vol
        If drt.volap <> 0 Then vri[7] = drt.volap
        $cimp[Me.ligne.Key] = vri
        '$cdrt.Add(drt)
        Select Case drt.type
          Case "A", "V"
            $stotdr = Str(Val($stotdr) + drt.droit)
          Case "B"
            If drt.drsurfac Then
              $stotasc = Str(Val($stotasc) + drt.droit)
              If Not drt.suspendu Then cassise(drt)
            Endif
        End Select
        If drt.suspendu Then        'prepa de l'ecriture comptable
          cdroits(drt)
        Endif
        $stotss = Str(Val($stotss) + drt.secu)
        $ftotht += drt.droit + drt.secu
        $ftotv += drt.vol
        $ftotap += drt.volap
      Endif
    Next
  Endif

  'Gestion des deconsignes
  qst = "("
  Me.vfac.resent.MoveFirst
  For i = 0 To Me.vfac.resent.Max
    qst &= Utils.db.Subst(" num=&1", Me.vfac.resent!numbl)
    If i < Me.vfac.resent.Max Then qst &= " OR" Else qst &= ")"
    Me.vfac.resent.MoveNext()
  Next
  Me.vfac.resent.MoveFirst
  rescons = Utils.db.Exec("SELECT SUM(nb) AS nb,SUM(montant) AS montant,codecons,Fiches_consigne.type,libelle FROM Fiches_ligcons,Fiches_consigne WHERE" & qst & " AND codecons=Fiches_consigne.code AND numlig='D' AND Fiches_ligcons.type=&1 GROUP BY codecons", $schoix)
  If rescons.Available Then
    $vdecons.Resize(rescons.Count)
    rescons.MoveFirst
    For i = 0 To rescons.Max
      vri = [" ", " ", " ", " ", " ", " ", " "]
      vri[4] = rescons!codecons
      vri[5] = rescons!libelle
      Select Case rescons!type
        Case "P"
          vri[0] = rescons!nb
        Case "C"
          vri[1] = rescons!nb
        Case "B"
          vri[2] = rescons!nb
      End Select
      vri[3] = Format(utils.arrondi(rescons!montant, 2), ",0.00")
      $vdecons[i] = vri
      $ftotht += rescons!montant
      $stotdecons = Format(utils.arrondi(Val($stotdecons) + rescons!montant, 2), ",0.00")
      rescons.MoveNext
    Next
  Endif
  $inb = rescons.Count
  res = Utils.db.Exec("SELECT conscli,intitule_cc FROM Fiches_Parametres,Fiches_Comptes WHERE compte_cc=conscli")
  If res.Available Then 
    montcons = Utils.totobs([$stotcons, $stotdecons])
    If montcons <> 0 Then
      Me.ecriture(res!conscli, montcons, res!intitule_cc)
      Me.ecriture(Me.vfac.resent!cdclibl, montcons * -1, Me.vfac.resent!nmclibl)
      Me.montttc += montcons
    Endif
  Else
    Message.Error("Erreur sur le paramametrage des consignes client")
  Endif
  'recalcul du montant de la tva
  If Object.IsValid(Me.tva) Then
    Me.monttva = 0
    For Each lg In Me.tva
      lg.tottva = lg.totht * (lg.taux / 100)
'      lg.tottva = utils.arrondi(lg.totht * (lg.taux / 100), 2)
      Me.tva[lg.num] = lg
      Me.monttva += utils.arrondi(lg.tottva, 2)
      res = utils.db.Exec("SELECT compte_cc,intitule_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", lg.num)
      If res.Available Then
        If Me.ecrit.Exist(res!compte_cc) Then
          Me.ecrit.Remove(res!compte_cc)
          Me.ecriture(res!compte_cc, lg.tottva, res!intitule_cc)
        Else
          Me.ecriture(res!compte_cc, lg.tottva, res!intitule_cc)
        Endif
      Endif
    Next
    If Me.ecrit.Exist(Me.vfac.numcli) Then Me.ecrit.Remove(Me.vfac.numcli)
    $stotasc = Format(utils.arrondi($stotasc, 2), "0.00")
    $stotdr = Format(utils.arrondi($stotdr, 2), "0.00")
    $stotss = Format(utils.arrondi($stotss, 2), "0.00")
    
    Me.montht = Utils.arrondi(Me.montart, 2) + Utils.arrondi(Me.montmo, 2) + Val($stotasc) + Val($stotdr) + Val($stotss) + Me.gestion
    Me.montttc = Me.montht + montcons + Me.monttva
    Me.ecriture(Me.vfac.numcli, Me.montttc * -1, Left(Me.vfac.adrfac.nom, 35))
  Endif
  
 $schoix = choix
End

Private Sub cassise(drt As Calculdroit)    'si magasin acquité et séparation qq même des droits ==> remonté des droits dans le compte vente de la famille article
  
  Dim res As Result
  
  If Me.tva.Exist(drt.codetva) Then
    If drt.droit <> 0 Then
      res = Utils.db.Exec("SELECT compte_cc,intitule_cc,cdtva_fam,txtva_fam FROM Fiches_Comptes,Fiches_Fam WHERE code_fam=&1 and compte_cc=compt_fam", drt.famille)
      Me.ecriture(res!compte_cc, drt.droit, res!intitule_cc)
      res = Utils.db.Exec("SELECT compte_cc,intitule_cc,taux_tva FROM Fiches_Comptes,Fiches_Tvaav WHERE code_tva=&1 AND compte_cc=cc_tva", res!cdtva_fam)
      Me.lignetva = Me.tva[drt.codetva]
      Me.lignetva.totht += drt.droit
      Me.lignetva.tottva += drt.tvadroit
      Me.tva[drt.codetva] = Me.lignetva
      Me.ecriture(res!compte_cc, drt.tvadroit, res!intitule_cc)
      Me.monttva += drt.tvadroit
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvadroit + drt.droit) * -1, Me.vfac.resent!nmclibl)
    Endif
  Else
    If drt.droit <> 0 Then
      res = Utils.db.Exec("SELECT compte_cc,intitule_cc,cdtva_fam,txtva_fam FROM Fiches_Comptes,Fiches_Fam WHERE code_fam=&1 and compte_cc=compt_fam", drt.famille)
      Me.ecriture(drt.cptreg, drt.droit, res!intitule_cc)
'      Me.montht += drt.droit
      res = Utils.db.Exec("SELECT compte_cc,intitule_cc,taux_tva FROM Fiches_Comptes,Fiches_Tvaav WHERE code_tva=&1 AND compte_cc=cc_tva", res!cdtva_fam)
      Me.lignetva.num = drt.cptreg
      Me.lignetva.taux = drt.tauxtvadr
      Me.lignetva.totht = drt.droit
      Me.lignetva.tottva = drt.tvadroit
      Me.tva.Add(Me.lignetva, drt.codetva)
      Me.ecriture(res!compte_cc, drt.tvadroit, res!intitule_cc)
      Me.monttva += drt.tvadroit
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvadroit + drt.droit) * -1, Me.vfac.resent!nmclibl)
    Endif
  Endif
End

Private Sub cdroits(drt As Calculdroit)
  
  Dim res, respar As Result
  
  'enregistrement des droits
  If Me.tva.Exist(drt.codetva) Then
    If drt.droit <> 0 Then
      res = Utils.db.Exec("SELECT intitule_cc FROM Fiches_Comptes WHERE compte_cc=&1", drt.cptreg)
      Me.ecriture(drt.cptreg, drt.droit, res!intitule_cc)
'      Me.montht += drt.droit
      res = Utils.db.Exec("SELECT intitule_cc,compte_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", drt.codetva)
      Me.lignetva = Me.tva[drt.codetva]
      Me.lignetva.totht += drt.droit
      Me.lignetva.tottva += drt.tvadroit
      Me.tva[drt.codetva] = Me.lignetva
      Me.ecriture(res!compte_cc, drt.tvadroit, res!intitule_cc)
      Me.monttva += drt.tvadroit
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvadroit + drt.droit) * -1, Me.vfac.resent!nmclibl)
    Endif
    'enregistrement secu
    If drt.secu <> 0 Then
      respar = Utils.db.Exec("SELECT css,tvass FROM Fiches_Parametres")
      res = Utils.db.Exec("SELECT intitule_cc FROM Fiches_Comptes WHERE compte_cc=&1", respar!css)
      Me.ecriture(respar!css, drt.secu, res!intitule_cc)
      res = Utils.db.Exec("SELECT intitule_cc,compte_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", respar!tvass)
      Me.ecriture(res!compte_cc, drt.tvasec, res!intitule_cc)
      Me.monttva += drt.tvasec
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvasec + drt.secu) * -1, Me.vfac.resent!nmclibl)
      Me.lignetva.totht += drt.secu
      Me.lignetva.tottva += drt.tvasec
    Endif
  Else
    If drt.droit <> 0 Then
      res = Utils.db.Exec("SELECT intitule_cc FROM Fiches_Comptes WHERE compte_cc=&1", drt.cptreg)
      Me.ecriture(drt.cptreg, drt.droit, res!intitule_cc)
      res = Utils.db.Exec("SELECT intitule_cc,compte_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", drt.codetva)
      Me.lignetva.num = drt.cptreg
      Me.lignetva.taux = drt.tauxtvadr
      Me.lignetva.totht = drt.droit
      Me.lignetva.tottva = drt.tvadroit
      Me.tva.Add(Me.lignetva, drt.codetva)
      Me.ecriture(res!compte_cc, drt.tvadroit, res!intitule_cc)
      Me.monttva += drt.tvasec
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvadroit + drt.droit) * -1, Me.vfac.resent!nmclibl)
    Endif
    If drt.secu <> 0 Then
      respar = Utils.db.Exec("SELECT css,tvass FROM Fiches_Parametres")
      res = Utils.db.Exec("SELECT intitule_cc FROM Fiches_Comptes WHERE compte_cc=&1", respar!css)
      Me.ecriture(respar!css, drt.secu, res!intitule_cc)
      res = Utils.db.Exec("SELECT intitule_cc,compte_cc FROM Fiches_Tvaav,Fiches_Comptes WHERE compte_cc=cc_tva AND code_tva=&1", respar!tvass)
      Me.ecriture(res!compte_cc, drt.tvasec, res!intitule_cc)
      Me.monttva += drt.tvasec
      Me.ecriture(Me.vfac.resent!cdclibl, (drt.tvasec + drt.secu) * -1, Me.vfac.resent!nmclibl)
      Me.lignetva.num = respar!css
      Me.lignetva.taux = respar!tvass
      Me.lignetva.totht = drt.droit
      Me.lignetva.tottva = drt.tvadroit
      Me.tva.Add(Me.lignetva, drt.codetva)
    Endif
  Endif
  
End

Public Function borientation() As Boolean
  
  Dim res As Result
  Dim lg As Variant
  Dim opt As String
  Dim bl As String
  
  opt = Utils.Option()
  If opt = "N" Or opt = "P" Then Return False
  For Each lg In Me.ligne
    If lg.Index = -1 Then Continue
    Me.vfac.reslig.MoveTo(lg.Index)
    If bl <> Me.vfac.reslig!num_ligbl Then
      bl = Me.vfac.reslig!num_ligbl
      res = Utils.db.Exec("SELECT * FROM Fiches_ligcons WHERE num = &1 AND numlig='D' LIMIT 1", Me.vfac.reslig!num_ligbl)
      If res.Available Then Return True
    Endif
    res = Utils.db.Exec("SELECT art_dra,art_consb,art_consc,art_consp FROM Fiches_Art WHERE art_code=&1", lg.code)
    If res.Available Then
      If res!art_dra Or res!art_consb Or res!art_consc Or res!art_consp Then Return True
    Endif
  Next
  Return False
  
End

Public Sub comptmat(Optional numfac As String, magasin As Boolean)    'enregistrement de la compta matiere à l'edition des factures

  Dim res, resvig, reslig1, respar As Result
  Dim drt As Calculdroit
  Dim i, nvign As Integer
  Dim num As String
  Dim lg As Variant

  Utils.db.Begin
  'Facture magasin
  'regarde dans le/les bons si un article est en droit suspendu ==> incremente le n° de vignette
  If magasin Then 
    resvig = Utils.db.Exec("SELECT suspendu FROM Fiches_HistoLigfac, Fiches_Art,Fiches_regie WHERE num_ligfac=&1 AND art_code=code_ligfac AND Fiches_regie.code=art_dra AND suspendu=True LIMIT 1 ", numfac)
    If resvig.Available Then
      If resvig!suspendu Then
        nvign = nvignette()
      Endif
    Endif
    reslig1 = Utils.db.Exec("SELECT numlig_ligfac,qte_ligfac,art_code,art_dra,art_volm,art_deg,dtligbl_ligfac FROM Fiches_HistoLigfac, Fiches_Art WHERE num_ligfac=&1 AND code_ligfac=art_code AND art_dra IS NOT NULL", numfac)
    If reslig1.Available Then
      reslig1.MoveFirst
      For i = 0 To reslig1.Max
        drt = New Calculdroit(reslig1!art_dra, reslig1!art_volm, reslig1!art_deg, reslig1!qte_ligfac)
        res = Utils.db.Create("Fiches_ligregie")
        res!dtmouv = reslig1!dtligbl_ligfac
        res!num = numfac
        res!numlig = Space(6) & reslig1!numlig_ligfac
        res!type = "S"
        res!codeart = reslig1!art_code
        res!coderegie = reslig1!art_dra
        res!qte = reslig1!qte_ligfac
        res!volume = drt.vol
        res!degres = reslig1!art_deg
        res!volumeap = drt.volap
        res!montdr = drt.droit
        res!txtvadr = drt.tauxtvadr
        res!montss = drt.secu
        res!txtvass = drt.tauxtvass
        res!volumess = drt.volumess
        res!cloture = False
        If nvign > 0 Then res!vignette = Format(nvign, "0000000000000000000000000")
        res.Update
        reslig1.MoveNext
      Next
      Utils.db.Commit
      Return
    Endif
  
  Endif
  
  If Not $borientation Then Return
  'recherche si vignette
  For Each lg In Me.ligne
     If lg.Index = -1 Then Continue
     Me.vfac.reslig.MoveTo(lg.Index)
     reslig1 = Utils.db.Exec("SELECT suspendu FROM Fiches_Art,Fiches_regie WHERE art_dra=code AND art_code=&1", lg.code)
     If reslig1.Available Then
       If reslig1!suspendu Then
         nvign = nvignette()
         Break
       Endif
     Endif
  Next
  'enregistrement compta matiere
  For Each lg In Me.ligne
    If lg.Index = -1 Then Continue
    Me.vfac.reslig.MoveTo(lg.Index)
    reslig1 = Utils.db.Exec("SELECT art_code,art_dra,art_volm,art_deg FROM Fiches_Art WHERE art_code=&1", lg.code)
    If reslig1.Available Then
      If Not IsNull(reslig1!art_dra) Then
          drt = New Calculdroit(reslig1!art_dra, reslig1!art_volm, reslig1!art_deg, lg.qte)
          res = Utils.db.Create("Fiches_ligregie")
          res!dtmouv = Me.vfac.reslig!dte_ligbl
          res!num = Me.vfac.numfac
          res!numlig = Me.vfac.reslig!num_ligbl & Me.ligne.Key
          res!type = "S"
          res!codeart = reslig1!art_code
          res!coderegie = reslig1!art_dra
          res!qte = lg.qte
          res!volume = drt.vol
          res!degres = reslig1!art_deg
          res!volumeap = drt.volap
          res!montdr = drt.droit
          res!txtvadr = drt.tauxtvadr
          res!montss = drt.secu
          res!txtvass = drt.tauxtvass
          res!volumess = drt.volumess
          res!cloture = False
          If Val($stotdr) <> 0 Then res!vignette = Format(nvign, "0000000000000000000000000")
          res.Update
      Endif
    Endif
  Next
  Utils.db.Commit
  
End

Private Function nvignette() As Integer
  Dim respar As Result
  Dim nvign As Integer
  
  Utils.db.Exec("LOCK TABLES Fiches_Parametres WRITE")
  respar = Utils.db.Exec("SELECT * FROM Fiches_Parametres")
    nvign = Utils.totobs([respar!nvign])
    nvign += 1
    Utils.db.Exec("UPDATE Fiches_Parametres SET nvign=&1", Format(nvign, "0000000000000000000000000"))
  Utils.db.Exec("UNLOCK TABLES")
  Return nvign
  
End

Public Function poid() As String

  Dim res As Result
  Dim i As Integer
  
  If $schoix = "M" Or $schoix = "FM" Then Return " "
  If $schoix = "B" Then
    res = Utils.db.Exec("SELECT SUM(REPLACE(qte_ligbl,',','.') * art_poids) as poid FROM Fiches_Ligbl,Fiches_Art WHERE num_ligbl=&1 AND art_code=code_ligbl", $num)
  Else
    res = Utils.db.Exec("SELECT SUM(REPLACE(qte_ligfac,',','.') * art_poids) as poid FROM Fiches_HistoLigfac,Fiches_Art WHERE num_ligfac=&1 AND art_code=code_ligfac", $num)
  Endif
  
  If Not IsNull(res!poid) Then Return Format(res!poid, "0.00") Else Return "0,00"

End

Private Function aimprimer_Read() As Collection

  Return $cimp

End

Private Function consigne_Read() As String

  Return Format(utils.arrondi($stotcons, 2), "0.00")

End

Private Function deconsigne_Read() As String

  Return Format(utils.arrondi($stotdecons, 2), "0.00")

End

Private Function droit_Read() As String

  Return Format(utils.arrondi($stotdr, 2), "0.00")

End

Private Function secu_Read() As String

  Return Format(utils.arrondi($stotss, 2), "0.00")

End

Private Function ascise_Read() As String

  Return Format(utils.arrondi($stotasc, 2), "0.00")

End

Private Function totht_Read() As Float

  Return $ftotht

End

Private Function nbdecons_Read() As Integer

  If $inb = -1 Then $inb = 0
  Return $inb

End


Private Function decons_Read() As Variant

  Return $vdecons

End

Private Function totvolume_Read() As String

  Return Format($ftotv, "0.00")

End

Private Function totap_Read() As String

  Return Format($ftotap, "0.00")

End

Private Function clotmat_Read() As Date

  

End
