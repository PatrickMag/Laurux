' Gambas class file

Private $dteinv As New LDate
Private $dteinf As New LDate
Private $coul As Integer

Public Struct volume
  vdp As Float
  ven As Float
  vso As Float
  vfp As Float
End Struct

Public Struct stk
  vae As Volume
  vap As Volume
End Struct

Public Struct declaration
  totvol As Stk
  qteimp As Float
  tarifdr As Float
  tarifss As Float
  droit As Float
  secu As Float
  volumess As Float
End Struct

Public ddcl As Declaration

Public Sub _new()

  Dim ch As Chainage
  
  ch = New Chainage([Textmois, Textanne, nbdec])
  nbdec.numerique = True
  nbdec.reg = "[0-9]{0,1}"
  Textmois.numerique = True
  Textmois.reg = "[0-9]{0,2}"
  Textmois.Text = Format(Month(Now), "00")
  Textanne.numerique = True
  Textanne.reg = "[0-9]{0,4}"
  Textanne.Text = Format(Year(Now), "0000")
  Textmois.Select
  Textmois.SetFocus
  
  $coul = Val("&H" & Hex(Start.R) & Hex(Start.G) & Hex(Start.B))

End

Public Sub Control_Click()

  ctrl
  
End

Private Function ctrl() As Boolean

  Dim res, resdr, reslig As Result
  Dim err As Boolean
  Dim vfac As VarFac
  Dim cal As Calculconsdroit
  Dim lg As Variant
  Dim pb As ProgBar
  
  Application.Busy += 1
  Textcontrol.Clear
  If calcdate() Then Return True
  'véririe les entrée de marchandise
'  pb = New ProgBar("Vérification de la comptablitité matiére", 6)
'  pb.Show
  res = Utils.db.Exec("SELECT Fiches_Ligrecpt.four,Fiches_Ligrecpt.numrecpt,daterecpt AS ddate,art_code,art_dra,art_design FROM Fiches_Entrecpt, Fiches_Ligrecpt,Fiches_Art WHERE NOT validee AND Fiches_Entrecpt.numrecpt=Fiches_Ligrecpt.numrecpt AND Fiches_Ligrecpt.code=art_code AND art_dra IS NOT NULL AND (ddate BETWEEN &1 AND &2) ORDER BY Fiches_Ligrecpt.numrecpt", $dteinf.D, $dteinf.FinMois.D)
 ' pb.Avancement(" ACHATS NON VALIDÉES / PÉRIODES PRÉCEDANTES", 1)
  If res.Available Then
    Textcontrol.Text = Textcontrol.Text & "** ACHATS NON VALIDÉES / PÉRIODE EN COURS ** \n"
    err = ctrlachat(res)
  Endif
  res = Utils.db.Exec("SELECT Fiches_Ligrecpt.four,Fiches_Ligrecpt.numrecpt,daterecpt AS ddate,art_code,art_dra,art_design FROM Fiches_Entrecpt, Fiches_Ligrecpt,Fiches_Art WHERE NOT validee AND Fiches_Entrecpt.numrecpt=Fiches_Ligrecpt.numrecpt AND Fiches_Ligrecpt.code=art_code AND art_dra IS NOT NULL AND ddate < &1 ORDER BY Fiches_Ligrecpt.numrecpt", $dteinf.D)
'  pb.Avancement(" ACHATS NON VALIDÉES / PÉRIODES PRÉCEDANTES ")
  If res.Available Then
    Textcontrol.Text = Textcontrol.Text & "** ACHATS NON VALIDÉES / PÉRIODES PRÉCEDANTES ** \n"
    If err Then ctrlachat(res) Else err = ctrlachat(res)
    Wait 0.01
  Endif
  'vérifie les factures
  res = Utils.db.Exec("SELECT cdclibl as four,numbl as numrecpt,datebl as ddate,art_code,art_dra,art_design FROM Fiches_Bl,Fiches_Ligbl,Fiches_Art WHERE num_ligbl=numbl AND Fiches_Bl.type='B' and art_code=code_ligbl AND art_dra IS NOT NULL AND (dte_ligbl BETWEEN &1 AND &2) ORDER BY numbl", $dteinf.D, $dteinf.FinMois.D)
'  pb.Avancement(" FACTURES NON VALIDÉES / PÉRIODE EN COURS", 1)
  If res.Available Then
    Textcontrol.Text = Textcontrol.Text & "** FACTURES NON VALIDÉES / PÉRIODE EN COURS ** \n"
    If err Then ctrlachat(res) Else err = ctrlachat(res)
    Wait 0.01
  Endif
  res = Utils.db.Exec("SELECT cdclibl as four,numbl as numrecpt,datebl as ddate,art_code,art_dra,art_design FROM Fiches_Bl,Fiches_Ligbl,Fiches_Art WHERE num_ligbl=numbl AND Fiches_Bl.type='B' and art_code=code_ligbl AND art_dra IS NOT NULL AND dte_ligbl < &1 ORDER BY numbl", $dteinf.D)
'  pb.Avancement(" FACTURES NON VALIDÉES / PÉRIODES PRÉCEDANTES", 1)
  If res.Available Then
    Textcontrol.Text = Textcontrol.Text & "** FACTURES NON VALIDÉES / PÉRIODES PRÉCEDANTES ** \n"
    If err Then ctrlachat(res) Else err = ctrlachat(res)
    Wait 0.01
  Endif
  'Vérifie si les articles passés sont en compta mat
  'Bl
  vfac = New VarFac
  reslig = utils.db.Exec("SELECT numfac,cdclibl,dtefac FROM Fiches_Art,Fiches_Ligbl,Fiches_Bl WHERE art_code=code_ligbl and numbl=num_ligbl and imp=1 and art_dra <> '' GROUP by numfac,cdclibl,dtefac")
'  pb.Avancement("Facture bl", 1)
  If reslig.Available Then
    Repeat
      vfac.numfac = reslig!numfac
      vfac.numcli = reslig!cdclibl
      vfac.dtedoc = New LDate(reslig!dtefac)
      vfac.choix = "F"
      cal = New Calculconsdroit(vfac, reslig!numfac, "F")
      For Each lg In cal.ligne
        res = utils.db.Exec("SELECT art_dra,art_volm FROM Fiches_Art WHERE art_code=&1 AND art_dra <> ''", lg.code)
        If res.Available Then
          resdr = utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE num=&1 and numlig LIKE &2", reslig!numfac, "%" & cal.ligne.Key)
          If Not resdr.Available Then
            Textcontrol.Text &= "Facture bl non trouvé : " & reslig!numfac & " " & cal.vfac.dtedoc.L & " " & lg.code & " " & lg.libel & " " & "\n"
            err = True
          Endif
        Endif
      Next
    Until reslig.MoveNext()
    Wait 0.01
  Endif
  'facture
  reslig = utils.db.Exec("SELECT * FROM Fiches_Art,Fiches_HistoLigfac,Fiches_HistoFac WHERE art_code=code_ligfac and numfac=num_ligfac and art_dra <> '' AND dtligbl_ligfac >= &1 ORDER by numfac", $dteinf.D)
'  pb.Avancement("Facture archive", 1)
  If reslig.Available Then
    Repeat
      res = utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE  num=&1 AND numlig LIKE &2", reslig!numfac, "%" & reslig!numlig_ligfac)
      If Not res.Available Then 
         Textcontrol.Text &= "Facture archive non trouvé : " & reslig!numfac & " " & LDate(reslig!datefac).L & " " & reslig!numlig_ligfac & " " & reslig!art_code & " " & reslig!art_design & " " & "\n"
         err = True
      Endif
    Until reslig.MoveNext()
  Endif
  Wait 0.01
  Application.Busy -= 1
'  pb.Close
  Return err

End


Private Function ctrlachat(res As Result) As Boolean
  
  Dim err As Boolean
  Dim resdr As Result
  
  res.MoveFirst
    Repeat
      resdr = Utils.db.Exec("SELECT suspendu FROM Fiches_regie WHERE code=&1", res!art_dra)
      If resdr.Available Then
        Select Case resdr!suspendu
          Case True
            If suspendu.Value Then
              Textcontrol.Text = Textcontrol.Text & res!four & " " & res!numrecpt & " " & LDate(res!ddate).L & " " & res!art_design & " " & "\n"
              err = True
            Endif
          Case False
            If Not suspendu.Value Then
              Textcontrol.Text = Textcontrol.Text & res!four & " " & res!numrecpt & " " & LDate(res!ddate).L & " " & res!art_design & " " & "\n"
              err = True
            Endif
        End Select
      Else
        Textcontrol.Text = Textcontrol.Text & " Probléme de regie " & res!art_dra & " \n" & res!four & " " & res!numrecpt & " " & LDate(res!ddate).L & " " & res!art_design & " " & "\n"
        err = True
      Endif
    Until res.MoveNext()
  Return err
End

'vérifie les dates et les stocks de début
Private Function calcdate() As Boolean
  
  Dim res As Result
  Dim retour As Boolean
  Dim dte As Date
  
  If Textmois.Value < 1 Or Textmois.Value > 12 Then
    Balloon.Delay = 3000
    Balloon.Warning("Mois invalide", Textmois)
    Textmois.SetFocus
    Textmois.Select
    retour = True
  Endif
  If Textanne.Value < 2000 Or Textanne.Value > 2100 Then
    Balloon.Delay = 3000
    Balloon.Warning("Année invalide", Textanne)
    Textanne.SetFocus
    Textanne.Select
    retour = True
  Endif
  If retour Then Return retour

  $dteinf.G = Date(Textanne.Text, Textmois.Value, 1)
  'control si mois déja cloturé
  dte = DateAdd($dteinf.G, gb.Month, 1)
  res = Utils.db.Exec("SELECT * FROM Fiches_ligregie,Fiches_regie WHERE Fiches_regie.code=coderegie AND suspendu=&2 AND dtmouv=&1 AND Fiches_ligregie.type='M'", dte, suspendu.Value)
  If res.Available Then
    Textcontrol.Text = "Période déjà cloturée \n"
    If cloture.Value Then Return True
  Endif
  'control si cloture annuelle
  res = Utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE type='I' ORDER BY dtmouv")
  If res.Available Then
    res.MoveLast
    $dteinv.g = res!dtmouv
    If $dteinf.Apres(LDate(DateAdd($dteinv.G, gb.Month, 12)), True) Then
      Textcontrol.Text = Textcontrol.Text & "Le dernier arrêté annuel à plus de 12 mois \n"
      If cloture.Value Then Return True
    Endif
  Else
    Textcontrol.Text = Textcontrol.Text & "Il n'existe pas d'inventaire matiére \n"
    If cloture.Value Then Return True
  Endif
  res = Utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE dtmouv=&1 AND (type='M' OR type='I')", $dteinf.G)
  If Not res.Available Then
    Textcontrol.Text = "Période précédente non cloturée \n"
    If cloture.Value Then Return True
  Endif
  
End

Public Sub Edition_Click()
  
  Dim tabl As Collection
  Dim dcl As Declaration
  Dim res As Result
  
  If cloture.Value Then
    If Message.Question("Clôture de la CM ?", "Oui", "Non") = 2 Then Return
  Endif
  Application.Busy += 1
  If ctrl() And cloture.Value Then
    Application.Busy -= 1
    Return
  Endif
  tabl = Edit(False)
  If cloture.Value Then
    'validation des lignes 
    Utils.db.Exec("UPDATE Fiches_ligregie,Fiches_regie SET cloture=True WHERE coderegie=Fiches_regie.code AND dtmouv BETWEEN &1 AND &2 AND cloture=False AND (Fiches_ligregie.type='S' OR Fiches_ligregie.type='E' OR Fiches_ligregie.type='C') AND suspendu=&3", $dteinf.D, $dteinf.FinMois.D, suspendu.Value)
    'ecriture du stock début de période prochaine
    Utils.db.Begin
    For Each dcl In tabl
      res = Utils.db.Create("Fiches_ligregie")
      res!dtmouv = DateAdd($dteinf.G, gb.Month, 1)
      res!type = "M"
      res!coderegie = tabl.Key
      res!volume = dcl.totvol.vae.vfp
      res!volumeap = dcl.totvol.vap.vfp
      res!volumess = dcl.volumess
      res!cloture = True
      res.Update
    Next
    Utils.db.Commit
  Endif
  Application.Busy -= 1
End

Public Sub Redition_Click()

  ctrl
  Edit(True)

End

Private Function Edit(clt As Boolean) As Collection

  Dim tabl As New Collection
  Dim dcl As New Declaration
  Dim res, resreg, restx As Result
  Dim cdroit As Calculdroit
  Dim ed As Object
  Dim nbd As Integer
  Dim Filename As String
  Dim prt As New Printer
  Dim pgb As ProgBar
  
  pgb = New ProgBar("Edition en cours", 0)
  pgb.Show
  Filename = User.Home & "/tmp/cmtmat.pdf"
  prt.OutputFile = Filename
  'creation du tableau à passer au report (Ecomptamat)
  Application.Busy += 1
  'stock debut de periode
  'on prend d'abord l'inventaire début année
  res = Utils.db.Exec("SELECT * FROM Fiches_ligregie, Fiches_regie WHERE dtmouv BETWEEN &1 AND &2 AND Fiches_ligregie.type='I' AND Fiches_regie.code=coderegie AND suspendu=&3 ", $dteinf.D, $dteinf.FinMois.D, suspendu.Value)
  If Not res.Available Then
    'si début d'année n'existe pas => stock début de période
    res = Utils.db.Exec("SELECT * FROM Fiches_ligregie, Fiches_regie WHERE  dtmouv BETWEEN &1 AND &2 AND Fiches_ligregie.type='M' AND Fiches_regie.code=coderegie AND suspendu=&3 ", $dteinf.D, $dteinf.FinMois.D, suspendu.Value)
  Endif
  If res.Available Then
    res.MoveFirst
    Repeat
      dcl = decldcl()
      dcl.totvol.vae.vdp = res!volume
      dcl.totvol.vap.vdp = res!volumeap
      If IsNull(res!tauxa) Then dcl.tarifdr = 0 Else dcl.tarifdr = res!tauxa / 100
      If IsNull(res!tauxss) Then dcl.tarifss = 0 Else dcl.tarifss = res!tauxss / 100
      tabl.Add(dcl, res!coderegie)
    Until res.MoveNext()
  Endif
  'volume entrés
  res = Utils.db.Exec("SELECT SUM(volume) as volume, SUM(volumeap) as volumeap,coderegie,tauxa,tauxss FROM Fiches_ligregie,Fiches_regie WHERE dtmouv BETWEEN &1 AND &2 AND cloture=&4 AND Fiches_ligregie.type='E' AND Fiches_regie.code=coderegie AND suspendu=&3 GROUP BY coderegie,tauxa,tauxss", $dteinf.D, $dteinf.FinMois.D, suspendu.Value, clt)
  If res.Available Then
    res.MoveFirst
    Repeat
      If tabl.Exist(res!coderegie) Then
        dcl = tabl[res!coderegie]
        dcl.totvol.vae.ven = res!volume
        dcl.totvol.vap.ven = res!volumeap
        tabl[res!coderegie] = dcl
      Else
        dcl = decldcl()
        dcl.totvol.vae.ven = res!volume
        dcl.totvol.vap.ven = res!volumeap
        If IsNull(res!tauxa) Then dcl.tarifdr = 0 Else dcl.tarifdr = res!tauxa / 100
        If IsNull(res!tauxss) Then dcl.tarifss = 0 Else dcl.tarifss = res!tauxss / 100
        tabl.Add(dcl, res!coderegie)
      Endif
    Until res.MoveNext()
  Endif
  'volume sortie
  If calcregie.Value Then            'calcul des droits au taux indiqué dans le fichier regie
    res = Utils.db.Exec("SELECT * FROM Fiches_ligregie, Fiches_regie WHERE dtmouv BETWEEN &1 AND &2 AND cloture=&4 AND (Fiches_ligregie.type='S' OR Fiches_ligregie.type='C') AND Fiches_regie.code=coderegie AND suspendu=&3", $dteinf.D, $dteinf.FinMois.D, suspendu.Value, clt)
    If res.Available Then
      Repeat
        If CFloat(res!qte) = 0 Then Continue
        cdroit = New Calculdroit(res!coderegie, (res!volume / res!qte) * 100, res!degres, res!qte)
        If tabl.Exist(res!coderegie) Then
          dcl = tabl[res!coderegie]
          dcl.totvol.vae.vso += cdroit.vol
          dcl.totvol.vap.vso += cdroit.volap
          dcl.droit += cdroit.droit
          dcl.secu += cdroit.secu
          dcl.volumess += cdroit.volumess
          tabl[res!coderegie] = dcl
        Else
          dcl = decldcl()
          dcl.totvol.vae.vso = cdroit.vol
          dcl.totvol.vap.vso = cdroit.volap
          dcl.droit = cdroit.droit
          dcl.secu = cdroit.secu
          dcl.volumess = cdroit.volumess
          If IsNull(res!tauxa) Then dcl.tarifdr = 0 Else dcl.tarifdr = res!tauxa / 100
          If IsNull(res!tauxss) Then dcl.tarifss = 0 Else dcl.tarifss = res!tauxss / 100
          tabl.Add(dcl, res!coderegie)
        Endif
      Until res.MoveNext()
     
    Endif
  Else                                                  'calcul des droits avec les montants déjà calculés dans le fichier ligregie
    res = Utils.db.Exec("SELECT SUM(volume) as volume, SUM(volumeap) as volumeap,SUM(montdr) as droit, SUM(montss) as secu, SUM(volumess) as volumess, coderegie FROM Fiches_ligregie, Fiches_regie WHERE dtmouv BETWEEN &1 AND &2 AND cloture=&4 AND (Fiches_ligregie.type='S' OR Fiches_ligregie.type='C') AND Fiches_regie.code=coderegie AND suspendu=&3 GROUP BY coderegie", $dteinf.D, $dteinf.FinMois.D, suspendu.Value, clt)
    If res.Available Then
      res.MoveFirst
      Repeat
        If tabl.Exist(res!coderegie) Then
          dcl = tabl[res!coderegie]
          dcl.totvol.vae.vso = res!volume
          dcl.totvol.vap.vso = res!volumeap
          dcl.droit = res!droit
          dcl.secu = res!secu
          dcl.volumess = res!volumess
          tabl[res!coderegie] = dcl
        Else
          dcl = decldcl()
          dcl.totvol.vae.vso = res!volume
          dcl.totvol.vap.vso = res!volumeap
          dcl.droit = res!droit
          dcl.secu = res!secu
          dcl.volumess = res!volumess
          tabl.Add(dcl, res!coderegie)
        Endif
      Until res.MoveNext()
    Endif
  Endif
  'totaux de chaque ligne
  For Each dcl In tabl
    dcl.totvol.vae.vfp = dcl.totvol.vae.vdp + dcl.totvol.vae.ven - dcl.totvol.vae.vso
    dcl.totvol.vap.vfp = dcl.totvol.vap.vdp + dcl.totvol.vap.ven - dcl.totvol.vap.vso
    If dcl.totvol.vap.vso <> 0 Then
      dcl.qteimp = dcl.totvol.vap.vso
      If dcl.tarifdr = 0 Then dcl.tarifdr = dcl.droit / dcl.totvol.vap.vso 
    Else
      dcl.qteimp = dcl.totvol.vae.vso
      If dcl.totvol.vae.vso <> 0 Then 
        If dcl.tarifdr = 0 Then dcl.tarifdr = dcl.droit / dcl.totvol.vae.vso
      Endif
    Endif
    If dcl.volumess <> 0 And dcl.tarifss = 0 Then 
      dcl.tarifss = dcl.secu / dcl.volumess 
    Else 
      If dcl.volumess = 0 Then dcl.tarifss = 0
    Endif
    'arrodi totaux et décimal
    nbd = Val(nbdec.Text) * -1
    If math.Value Then
      dcl.secu = Round(dcl.secu, nbd)
      dcl.droit = Round(dcl.droit, nbd)
    Endif
    If inf.Value Then
     dcl.secu = decim(dcl.secu, "*")
     dcl.secu = Floor(dcl.secu)
     dcl.secu = decim(dcl.secu, "/")
     dcl.droit = decim(dcl.droit, "*")
     dcl.droit = Floor(dcl.droit)
     dcl.droit = decim(dcl.droit, "/")
    Endif
    If sup.Value Then
     dcl.secu = decim(dcl.secu, "*")
     dcl.secu = Ceil(dcl.secu)
     dcl.secu = decim(dcl.secu, "/")
     dcl.droit = decim(dcl.droit, "*")
     dcl.droit = Ceil(dcl.droit)
     dcl.droit = decim(dcl.droit, "/")
    Endif
    tabl[tabl.Key] = dcl
  Next

  If tabl.Count > 0 Then
    If suspendu.Value Then
      ed = New Ecomptamat(tabl, Textmois.Text, Textanne.Text, False)
      ed.Print(prt)
      Visualiseur.Prog(Filename)
    Else
      ed = New Einvmat(tabl, Textmois.Text, Textanne.Text, False)
      ed.Print(prt)
      Visualiseur.Prog(Filename)
    Endif
  Endif
  Application.Busy -= 1
  Try pgb.Close
  Return tabl
  
End

Private Function decim(value As Float, op As String) As Float
  
  Dim i, nbd As Integer
  
  nbd = Val(nbdec.Text)
  For i = 0 To nbd - 1
    Select Case op
      Case "*"
        value *= 10
      Case "/"
        value /= 10
    End Select
  Next
  Return value
End

Private Function decldcl() As Declaration

  Dim dcl As Declaration
  
  dcl = New Declaration
  dcl.totvol = New Stk
  dcl.totvol.vae = New Volume
  dcl.totvol.vap = New Volume
  Return dcl
End


Public Sub Quitter_Click()

  Me.Close

End
'edition du detail de la cm classée par droit et degres
Public Sub detail_Click()

  Dim rpr As Report
  Dim res, resreg, resecour As Result
  Dim cdd As Calculdroit
  Dim volef, volap, totef, totap As Volume
  Dim degr As Float
  Dim ccd As Calculdroit
  Dim sdp As ReportPageBreak
  Dim Filename As String
  Dim prt As New Printer
  
  calcdate
  Filename = User.Home & "/tmp/tarif.pdf"
  prt.OutputFile = Filename
  '1° tri par code regie
  resreg = utils.db.Exec("SELECT code,nom FROM Fiches_regie ORDER BY code")
  If resreg.Available Then
    resreg.MoveFirst
    rpr = entete()
    totef = New Volume
    totap = New Volume
    Repeat
      volef = New Volume
      volap = New Volume
      'stock début de periode
      res = utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE coderegie=&1 AND type='I' AND dtmouv BETWEEN &2 AND &3", resreg!code, $dteinf.D, $dteinf.FinMois.D)
      If Not res.Available Then
        res = utils.db.Exec("SELECT * FROM Fiches_ligregie WHERE coderegie=&1 AND type='M' AND dtmouv BETWEEN &2 AND &3", resreg!code, $dteinf.D, $dteinf.FinMois.D)
      Endif
      If res.Available Then
        volef.vdp = res!volume
        volap.vdp = res!volumeap
      Endif
      'mouvement du mois classé par degres
      res = utils.db.Exec("SELECT * FROM Fiches_ligregie,Fiches_Art WHERE art_code= codeart AND coderegie=&1 AND (type='S' OR type='E' OR type='C') AND dtmouv BETWEEN &2 AND &3 ORDER BY degres DESC", resreg!code, $dteinf.D, $dteinf.FinMois.D)
      If res.Available Then
        res.MoveFirst
        entreg(rpr, resreg!code, resreg!nom)
        degr = res!degres
        Repeat
          If degr <> CFloat(res!degres) Then
            degr = res!degres
            soustot(rpr, totef, totap)
            totef = New Volume
            totap = New Volume
          Endif
          Select Case res!type
            Case "S", "C"
              volef.vso = res!volume
              volef.ven = 0
              volap.ven = 0
              volef.vfp = volef.vdp - volef.vso
              totef.vso += volef.vso
              volap.vso = res!volumeap
              volap.vfp = volap.vdp - volap.vso
              totap.vso += volap.vso
            Case "E"
              volef.ven = res!volume
              volef.vso = 0
              volap.vso = 0
              volef.vfp = volef.vdp + volef.ven
              totef.ven += volef.ven
              volap.ven = res!volumeap
              volap.vfp = volap.vdp - volap.ven
              totap.ven += volap.ven
          End Select         
          ligne(rpr, volef, volap, res!coderegie, res!art_code, res!art_design, res!num, res!dtmouv, res!art_volm, res!art_deg)
          volef.vdp = volef.vfp
          volap.vdp = volap.vfp
        Until res.MoveNext()
        soustot(rpr, totef, totap)
        'on regarde dans les entrées et sorties en cours non validées
        resecour = utils.db.Exec("SELECT art_code,art_volm,art_deg,art_design,art_dra,numbl AS num,dte_ligbl AS dte,qte_ligbl AS qte, 'S' AS type FROM Fiches_Bl,Fiches_Ligbl,Fiches_Art WHERE numbl=num_ligbl AND art_code=code_ligbl AND art_dra=&3 AND Fiches_Bl.type='B' AND dte_ligbl BETWEEN &1 AND &2 " & 
        "UNION ALL SELECT art_code,art_volm,art_deg,art_design,art_dra,Fiches_Entrecpt.numrecpt AS num,daterecpt AS dte,qte, 'E' AS type FROM Fiches_Ligrecpt,Fiches_Entrecpt,Fiches_Art WHERE Fiches_Ligrecpt.numrecpt = Fiches_Entrecpt.numrecpt  AND art_code=code AND art_dra=&3 AND validee=False AND daterecpt BETWEEN &1 AND &2", $dteinf.D, $dteinf.FinMois.D, resreg!code)
        If resecour.Available Then
          totef = New Volume
          totap = New Volume
          entreg(rpr, "  ", "Mouvements non validés")
          resecour.MoveFirst
          Repeat
            cdd = New Calculdroit(resecour!art_dra, resecour!art_volm, resecour!art_deg, resecour!qte)
            If resecour!type = "S" Then
              volef.vso = cdd.vol
              volef.ven = 0
              volef.vfp = volef.vdp - volef.vso
              totef.vso += volef.vso
              volap.vso = cdd.volap
              volap.vfp = volap.vdp - volap.vso
              totap.vso += volap.vso
            Else
              volef.ven = cdd.vol
              volef.vso = 0
              volef.vfp = volef.vdp + volef.ven
              totef.ven += volef.ven
              volap.ven = cdd.volap
              volap.vfp = volap.vdp - volap.ven
              totap.ven += volap.ven
            Endif
            ligne(rpr, volef, volap, resecour!art_dra, resecour!art_code, resecour!art_design, resecour!num, resecour!dte, resecour!art_volm, resecour!art_deg)
            volef.vdp = volef.vfp
            volap.vdp = volap.vfp
          Until resecour.MoveNext()
          soustot(rpr, totef, totap)
        Endif
        totef = New Volume
        totap = New Volume
        sdp = New ReportPageBreak(rpr)
        sdp.ForceNewPage = True
      Endif
    Until resreg.MoveNext()
  Endif
  rpr.Print(prt)
  Visualiseur.Prog(Filename)
  
End

Private Function entete() As Report

  Dim rpr As Report
  Dim lab As ReportLabel
  Dim hb As ReportHBox
  
  rpr = New Report
  rpr.Orientation = Printer.Landscape
  lab = New ReportLabel(rpr)
  
  lab.Text = "Détail des mouvements par code régie et degrés de  : " & Format($dteinf.G, "mmmm") & " " & Format($dteinf.g, "yyyy")
  lab.Font = font["Serif,-2"]
  lab.Alignment = Align.Center
  lab.BackGround = ReportBrush.Color($coul)
  lab.Border = ReportBorder["Top:1pt #000000;Bottom:1pt #000000;Left:1pt #000000;Right:1pt #000000"]
  lab.Fixed = True
  
  hb = New ReportHBox(rpr)
  hb.Border = ReportBorder["Top:1pt #000000;Bottom:1pt #000000;Left:1pt #000000;Right:1pt #000000"]
  hb.BackGround = ReportBrush.Color($coul)
  hb.Height = "4mm"
  hb.Fixed = True
  
  lab = New ReportLabel(hb)
  lab.Text = "Code "
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "10mm"

  lab = New ReportLabel(hb)
  lab.Text = "Code art"
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "20mm"

  lab = New ReportLabel(hb)
  lab.Text = "Libelle art"
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  Lab.Expand = True

  lab = New ReportLabel(hb)
  lab.Text = "Document"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Width = "20mm"
  lab.Border = ReportBorder["Right:1pt #000000"]

  lab = New ReportLabel(hb)
  lab.Text = "Date"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Width = "18mm"
  lab.Border = ReportBorder["Right:1pt #000000"]

  lab = New ReportLabel(hb)
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "Degrés"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  lab.Border = ReportBorder["Right:1pt #000000"]

  lab = New ReportLabel(hb)
  lab.Text = "Volume"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  lab.Border = ReportBorder["Right:1pt #000000"]

  lab = New ReportLabel(hb)
  lab.Text = "VE début"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "VE sorti"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "VE entré"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "VE fin"
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Center
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "AP début" 
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "AP sorti"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"

  lab = New ReportLabel(hb)
  lab.Text = "AP entré"
  lab.Alignment = Align.Center
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  lab.Alignment = Align.Center

  lab = New ReportLabel(hb)
  lab.Text = "AP fin"
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Center
  lab.Width = "15mm"
  
  Return rpr
  
End

Private Sub entreg(rpr As Report, cde As String, lib As String)
  
  Dim lab As ReportLabel
 
  lab = New ReportLabel(rpr)
  lab.Font = font["Serif,-4"]
  lab.Text = cde & "  " & lib
  
End

Private Sub soustot(rpr As Report, totef As Volume, totap As Volume)
  
  Dim hb As ReportHBox
  Dim lab As ReportLabel
  
  hb = New ReportHBox(rpr)
  hb.Height = "4mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  
  lab = New ReportLabel(hb)
  lab.Expand = True
  lab.Font = font["Serif,-5"]
  lab.Text = "Total"
  
  lab = New ReportLabel(hb)
  If totef.vso <> 0 Then lab.Text = Format(totef.vso, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If totef.ven <> 0 Then lab.Text = Format(totef.ven, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If totap.vso <> 0 Then lab.Text = Format(totap.vso, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If totap.ven <> 0 Then lab.Text = Format(totap.ven, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "15mm"
  
End

Private Sub ligne(rpr As Report, volef As Volume, volap As Volume, code As String, art As String, lib As String, doc As String, dte As Date, vol As Float, deg As Float)
  
  Dim hb As ReportHBox
  Dim lab As ReportLabel
  
  hb = New ReportHBox(rpr)
  hb.Height = "4mm"
  
  lab = New ReportLabel(hb)
  lab.Text = code 
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "10mm"
  
  lab = New ReportLabel(hb)
  lab.Text = art
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "20mm"
  
  lab = New ReportLabel(hb)
  lab.Text = lib
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  Lab.Expand = True
  
   lab = New ReportLabel(hb)
  lab.Text = doc
  lab.Font = font["Serif,-5"]
  lab.Width = "20mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Text = LDate(dte).L
  lab.Font = font["Serif,-5"]
  lab.Width = "18mm"
   lab.Alignment = Align.Center
  lab.Border = ReportBorder["Right:1pt #000000"]
  
   lab = New ReportLabel(hb)
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = deg
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Right
  lab.Width = "15mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Text = vol
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Right
  lab.Width = "15mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  If volef.vdp <> 0 Then lab.Text = Format(volef.vdp, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volef.vso <> 0 Then lab.Text = Format(volef.vso, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volef.ven <> 0 Then lab.Text = Format(volef.ven, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volef.vfp <> 0 Then lab.Text = Format(volef.vfp, "0.00")
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Right
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volap.vdp <> 0 Then lab.Text = Format(volap.vdp, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volap.vso <> 0 Then lab.Text = Format(volap.vso, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volap.ven <> 0 Then lab.Text = Format(volap.ven, "0.00")
  lab.Alignment = Align.Right
  lab.Font = font["Serif,-5"]
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
  lab = New ReportLabel(hb)
  If volap.vfp <> 0 Then lab.Text = Format(volap.vfp, "0.00")
  lab.Font = font["Serif,-5"]
  lab.Alignment = Align.Right
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Width = "15mm"
  
End


Public Sub inv_Click()
  
  editinv(EditStkDepart.inventaire)

End

Public Sub invt_Click()

  editinv(EditStkDepart.tournant)

End

Public Sub stdep_Click()

  editinv(EditStkDepart.depart)

End

Public Sub stock_Click()

  
editinv(EditStkDepart.fin)
End

Private Sub editinv(choix As Integer)

  Dim Filename As String
  Dim prt As New Printer
  Dim rp As EditStkDepart
  
  Filename = User.Home & "/tmp/stockmat.pdf"
  prt.OutputFile = Filename
  rp = New EditStkDepart(choix)
  rp.Print(prt)
  Desktop.Open(Filename)

End