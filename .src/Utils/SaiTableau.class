' Gambas class file

Public ligne As New SaiLig[]      ''Tableau des saisies
Public ind As Integer = -1          ''Index du tableau des saisie
Public opt As String

Public VisibleTuto As Boolean = True
Public VisibleEntete As Boolean = True
Public VisibleTot As Boolean = True
Public VisibleChoi As Boolean = True

Public total As SaiLig
Public entete As SaiLig 

Public pchoix As Panel
Public mo As RadioButton
Public art As RadioButton
Public artstk As RadioButton
Public tuto As Label
Public Pentete As ScrollView
Public Tableau As ScrollView
Public Ptot As ScrollView

Public $prop As New ObjProp[]
Private $parent As Control

Const Background As Integer = &FFEFDF

Event ajou(Value As Sailig)  ''Est levé lorsque on ajoute une ligne de saisie
Event gotfocus(Value As Sailig)
Event lostfocus(Value As Sailig)


Public Sub _new(prop As ObjProp[], Optional parent As Control)

  $prop = prop
  opt = Utils.Option()
  If IsNull(parent) Then
    $parent = New Window
    $parent.Height = 400
    $parent.Width = 800
    Else
      $parent = parent
  Endif

End

Public Sub _next() As SaiLig

  If Enum.Index = Null Then Enum.Index = -1
  Enum.Index += 1
  If ligne.Count = Enum.Index Then 
    Enum.Stop
  Else
    Return ligne[Enum.Index]
  Endif

End

Public Sub show()

  Dim prop As ObjProp[]
  Dim obj, nouobj As ObjProp
  
  If VisibleChoi Then
    pchoix = New Panel($parent)
    pchoix.Arrangement = Arrange.Horizontal
    pchoix.Width = $parent.W
    pchoix.Border = Border.Plain
    mo = New RadioButton(pchoix) As "mo"
    mo.Expand = True
    mo.H = 50
    mo.Text = "MO"
    art = New RadioButton(pchoix) As "art"
    art.Expand = True
    art.Text = "Articles"
    artstk = New RadioButton(pchoix) As "artstk"
    artstk.Expand = True
    artstk.Text = "Articles en stock"
    pchoix.H = $parent.Font.Height + 10
  Endif
  
  If VisibleTuto Then
    tuto = New Label($parent)
    tuto.w = $parent.W
    tuto.H = tuto.Font.H * 4
    tuto.Background = &h00DFFFF7
'    tuto.AutoResize = True
    tuto.x = 0
    tuto.Alignment = Align.Center
    tuto.Font = Font["Italic,-1"]
    tuto.Text = "Alt + Fléche Haut / Alt + Fléche Bas : Déplace la ligne   	Entrée / Tab / Fléche Haut : Zone suivante 		Shift + Tab / Fléche Bas : Zone précedante \n  Ins: Insert une ligne Del / Sup: Supprime une ligne Ctrl + Entrée : Retour à la ligne                                Esc : Rétablit la valeure précedante \n Ctrl + c: Bascule en commentaire \n Code: F2 Recherche Rem: 10 % = Remise en % ou 10 = Remise en valeur"
  Endif
  
  If VisibleEntete Then
    Pentete = New ScrollView($parent)
    Pentete.w = $parent.W
    Pentete.H = $parent.Font.H + 4
    Pentete.Arrangement = Arrange.Vertical
    Pentete.Border = Border.Plain
    prop = New ObjProp[]
    For Each obj In $prop
      nouobj = New ObjProp(Null, obj.NomControl, ObjProp.Label)
      nouobj.AddChamp("Text", obj.NomControl)
      nouobj.AddChamp("Alignment", Align.Center)
      nouobj.AddChamp("Border", Border.Plain)
      nouobj.Height = obj.Height
      nouobj.Width = obj.Width
      prop.Add(nouobj)
    Next
    entete = New Sailig(prop, Pentete, SaiLig.lecture) As "entete"
  Endif
  
  tableau = New ScrollView($parent) As "tableau"
  tableau.Expand = True
  Tableau.Arrangement = Arrange.Vertical
  tableau.Font = Font["Italic,-1"]
  tableau.Background = Color.White
  
  If VisibleTot Then
    Ptot = New ScrollView($parent) As "pto"
    Ptot.w = $parent.W
    Ptot.h = $parent.Font.h + 4
    Ptot.Border = Border.Plain
    Ptot.Arrangement = Arrange.Vertical
    prop = New ObjProp[]
    For Each obj In $prop
      nouobj = New ObjProp(Null, obj.NomControl, ObjProp.Label)
      nouobj.AddChamp("Alignment", Align.Right)
      nouobj.Height = obj.Height
      nouobj.Width = obj.Width
      prop.Add(nouobj)
    Next
    total = New Sailig(prop, Ptot, SaiLig.lecture) As "total"
  Endif

End

Public Sub Pentete_Scroll()

  tableau.Scroll(Pentete.ScrollX, Pentete.ScrollY)

End

Public Sub ajout(Optional etat As Integer = SaiLig.ecriture)

  Dim lg As SaiLig
  Dim obs As Observer
  Dim obj As Object
  
  lg = New SaiLig($prop, tableau, etat) As "ligne"
  evenement(lg)
  lg.Tag = ligne.Count
  ligne.Add(lg)
  If ind > -1 Then HideAutreO(ligne[ind])
  ind = ligne.Max
  If Not Even(ind) Then ligne[ind].Background = Background 
  Raise ajou(ligne[ind])
  ligne[ind].MonControle[$prop[0].NomControl].SetFocus
  ligne[ind].MonControle[$prop[0].NomControl].Select
  
End

Private Sub evenement(lg As Sailig)   ''on rattache tous les évenements des controles de SaiLig ici, ils sont donc accessibles dans les classes héritées de SaiTableau
  
  Dim obj As Object
  
  For Each obj In lg.MonControle
    Object.Attach(obj, Me, obj.name)
  Next
  
End

Private Sub AfficheAutreO(Value As Sailig)      ''on gére l'affichage des éventuels autres objets
  
  Dim obj As Object
  
  If IsNull(value.AutresObj) Then Return
  For Each obj In value.AutresObj
    Try obj.visible = True
  Next
  
End

Private Sub HideAutreO(value As Sailig)
  
  Dim obj As Object
  
  If IsNull(value.AutresObj) Then Return
  For Each obj In value.AutresObj
    Try obj.Hide
  Next
  
End

Public Sub ligne_RetLigne(etat As Integer)

  If ind = ligne.Max Then 
   If etat = SaiLig.ecriture And ligne[ind].MonControle[ligne[ind].MonControle.Last].Tag = True Then ajout()
  Else
    ligne[ind + 1].MonControle[$prop[0].NomControl].SetFocus
    ind += 1
  Endif
  Stop Event

End

Public Sub ligne_gotfocus(Value As SaiLig)

  HideAutreO(ligne[ind])
  AfficheAutreO(Value)
  ind = value.Tag
  Raise gotfocus(Value)
  
End

Public Sub ligne_lostfocus(Value As Sailig)

    Raise lostfocus(Value)
    
End

Public Sub ligne_SupLig(etat As Integer)

  Dim i, coul As Integer
  
  If etat = SaiLig.ecriture And ligne[ind].MonControle[ligne[ind].MonControle.Last].Tag = True Then
    If Message.Question("Voulez vous supprimer cette ligne ?", "Oui", "Non") = 1 Then
      If Even(ind) Then coul = ligne[ind].Background Else coul = ligne[ind - 1].Background
      ligne[ind].Delete
      ligne.Extract(ind)
      tableau.Refresh
      Wait 0.01
      For i = ind To ligne.Max
        If Not Even(i) Then ligne[i].Background = Background Else ligne[i].Background = coul
        ligne[i].Tag = i
      Next
      If ind > ligne.Max Then ind = ligne.Max
      If ligne.Count = 0 Then ajout
      ligne[ind].MonControle[$prop[0].NomControl].SetFocus
    Endif
  Endif
  Stop Event

End

Public Sub ligne_InsLig(etat As Integer) 

  Dim ls As New SaiLig($prop, tableau) As "ligne"
  Dim i, coul As Integer
  
  If etat = SaiLig.ecriture And ligne[ind].MonControle[ligne[ind].MonControle.Last].Tag = True Then
    evenement(ls)
    If Even(ind) Then coul = ligne[ind].Background Else coul = ligne[ind - 1].Background
'    ind = ligne.Find(sl)
    ligne.Insert([ls], ind)
    If ind = 0 Then ls.Panel1.Previous = Null Else ls.Panel1.Previous = ligne[ind - 1].Panel1
    ls.Panel1.Next = ligne[ind].Panel1
    For i = ind To ligne.Max
      If Not Even(i) Then ligne[i].Background = Background Else ligne[i].Background = coul
      ligne[i].Tag = i
    Next
    ligne[ind].MonControle[$prop[0].NomControl].SetFocus
  Endif

End

Public Sub ligne_Haut(etat As Integer) 

  Dim coul As Integer
  
  If etat = SaiLig.ecriture And ligne[ind].MonControle[ligne[ind].MonControle.Last].Tag = True Then
    If ind > 0 And ligne.Count > 1 Then
      ligne[ind].Panel1.Next = ligne[ind - 1].Panel1
      Swap ligne[ind], ligne[ind - 1]
      Swap ligne[ind].Tag, ligne[ind - 1].Tag
      ind -= 1
      If Not Even(ind) Then 
        coul = ligne[ind].Background
        ligne[ind].Background = Background  
        ligne[ind + 1].Background = coul
      Else 
        coul = ligne[ind + 1].Background
        ligne[ind].Background = coul
        ligne[ind + 1].Background = Background 
      Endif
    Endif
  Endif

End

Public Sub ligne_Bas(etat As Integer)

  Dim coul As Integer
  
  If etat = SaiLig.ecriture And ligne[ind].MonControle[ligne[ind].MonControle.Last].Tag = True Then
    If ind < ligne.Max And ligne.Count > 1 Then
       ligne[ind].Panel1.Previous = ligne[ind + 1].Panel1
      Swap ligne[ind], ligne[ind + 1]
      Swap ligne[ind].Tag, ligne[ind + 1].Tag
      ind += 1
      If Not Even(ind) Then 
        coul = ligne[ind].Background
        ligne[ind].Background = Background  
        ligne[ind - 1].Background = coul
      Else 
        coul = ligne[ind - 1].Background
        ligne[ind].Background = coul
        ligne[ind - 1].Background = Background 
      Endif
    Endif
  Endif

End
